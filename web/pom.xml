<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ainia</groupId>
  <artifactId>web</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>web Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jetty.version>7.6.7.v20120910</jetty.version>
    <jdk.version>1.6</jdk.version>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>com.ainia</groupId>
      <artifactId>api</artifactId>
      <version>0.0.2-SNAPSHOT</version>    
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <finalName>web</finalName>
    
    <pluginManagement>
        <plugins> 
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.0</version>
               <configuration>
                   <source>${jdk.version}</source>
                   <target>${jdk.version}</target>
                   <showWarnings>true</showWarnings>
               </configuration>
           </plugin>
           <!-- jetty 插件 -->
           <plugin>
              <groupId>org.mortbay.jetty</groupId>
              <artifactId>jetty-maven-plugin</artifactId>
              <version>${jetty.version}</version>
              <configuration>      
                <webAppConfig>
                  <contextPath>/</contextPath>
                 <defaultsDescriptor>
                  webdefault.xml
                </defaultsDescriptor>
                </webAppConfig>
              </configuration>
            </plugin>
          <plugin>
              <!-- YUI Compressor Maven压缩插件 -->
              <groupId>net.alchim31.maven</groupId>
              <artifactId>yuicompressor-maven-plugin</artifactId>
              <version>1.3.0</version>
			  <executions>
			      <execution>
			        <phase>compile</phase>
			        <goals>
			         <goal>compress</goal>
			        </goals>
			      </execution>
			  </executions>
              <configuration>
                <!-- 读取js,css文件采用UTF-8编码 -->
                <encoding>UTF-8</encoding>
                <!-- 不显示js可能的错误 -->
                <jswarn>false</jswarn>
                <!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
                <force>false</force>
                <!-- 在指定的列号后插入新行 -->
                <linebreakpos>-1</linebreakpos>
                <!-- 压缩之前先执行聚合文件操作 -->
                <preProcessAggregates>true</preProcessAggregates>
                <!-- 压缩后保存文件后缀 -->
                <!--nosuffix>true</nosuffix-->
                <nosuffix>true</nosuffix>
                <!-- 源目录，即需压缩的根目录 -->
                <sourceDirectory>${project.build.outputDirectory}/web/scripts</sourceDirectory>
                <!-- 压缩js和css文件 -->
                <includes>
                  <include>**/*.js</include>
                  <include>**/*.css</include>
                </includes>
                <!-- 以下目录和文件不会被压缩 -->
                <excludes>
                  <exclude>**/angular.js</exclude>
                  <exclude>**/angular-table.js</exclude>
                  <exclude>**/*.min.js</exclude>
                  <exclude>**/*.min.css</exclude>
                </excludes>
                <!-- 压缩后输出文件目录 -->
                <outputDirectory>${project.build.outputDirectory}/web/scripts</outputDirectory>
              </configuration>
        </plugin>
	    <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-war-plugin</artifactId>
		    <version>2.4</version>
			<configuration>
			    <warName>${project.artifactId}</warName>
			    <warSourceExcludes>/**/*.js,/**/*.css</warSourceExcludes>
			</configuration>
	    </plugin>
       </plugins>
    </pluginManagement>
  </build>
</project>
